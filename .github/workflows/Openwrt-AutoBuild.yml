#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================
# Tokens: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
#=================================================

name: openwrt-23.05

on:
  workflow_dispatch:
    inputs:
      manual:
        description: '手动触发一次编译'

env:
  REPO_URL: https://github.com/openwrt/openwrt
  REPO_BRANCH: openwrt-23.05
  CONFIG_FILE: .config
  DIY_SH: diy.sh
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 准备结束
      uses: actions/checkout@main

    - name: 初始化编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential clang flex g++ gawk gcc-multilib gettext \
        git libncurses5-dev libssl-dev python3-distutils python3-pyelftools python3-setuptools \
        libpython3-dev rsync unzip zlib1g-dev swig aria2 jq subversion qemu-utils ccache rename \
        libelf-dev device-tree-compiler libgnutls28-dev coccinelle libgmp3-dev libmpc-dev
        sudo -E apt-get -qq purge azure-cli ghc* zulu* llvm* firefox powershell openjdk* dotnet* google* mysql* php* android*
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
        
    - name: 拉取openwrt源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        
    - name: 加载自定义配置
      run: |
        cp -rf devices/common/. openwrt/
        cp -rf devices/x86_64/. openwrt/
        cp -rf devices openwrt/
        cd openwrt
        chmod +x devices/common/diy.sh
        /bin/bash "devices/common/diy.sh"
        cp -f devices/common/.config .config
        if [ -f "devices/x86_64/.config" ]; then
          echo >> .config
          cat devices/x86_64/.config >> .config
        fi
        if [ -f "devices/x86_64/diy.sh" ]; then
          chmod +x devices/x86_64/diy.sh
          echo "/bin/bash devices/x86_64/diy.sh"
          /bin/bash "devices/x86_64/diy.sh"
        fi
        cp -Rf ./diy/* ./ || true
        
    - name: 安装并更新插件
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
    
    - name: 应用patch补丁
      run: |
        cd openwrt
        find "devices/common/patches" -type f ! -name 'china_mirrors.patch' -name '*.patch' ! -name '*.revert.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -B --merge -p1 -E --forward"
        #git apply devices/common/patches/*.patch
        if [ -n "$(ls -A devices/x86_64/patches 2>/dev/null)" ]; then
          if [ -n "$(ls -A devices/x86_64/*.bin.patch 2>/dev/null)" ]; then
            git apply devices/x86_64/patches/*.bin.patch
          fi
          find "devices/x86_64/patches" -maxdepth 1 -type f -name '*.patch' ! -name '*.revert.patch' ! -name '*.bin.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -B --merge -p1 -E --forward"
          find "devices/x86_64/patches" -maxdepth 1 -type f -name '*.revert.patch' -print0 | sort -z | xargs -I % -t -0 -n 1 sh -c "cat '%'  | patch -d './' -R -B --merge -p1 -E --forward"
        fi
        sed -i '$a  \
        CONFIG_CPU_FREQ_GOV_POWERSAVE=y \
        CONFIG_CPU_FREQ_GOV_USERSPACE=y \
        CONFIG_CPU_FREQ_GOV_ONDEMAND=y \
        CONFIG_CPU_FREQ_GOV_CONSERVATIVE=y \
        CONFIG_CRYPTO_CHACHA20_NEON=y \
        CONFIG_CRYPTO_CHACHA20POLY1305=y \
        CONFIG_FAT_DEFAULT_IOCHARSET="utf8" \
        ' `find target/linux -path "target/linux/*/config-*"`
    
    - name: 生成默认配置文件
      run: |
        cd openwrt
        make defconfig
        sed -n '/# Wireless Drivers/,/# end of Wireless Drivers/p' .config | sed -e 's/=m/=n/' >>.config
        make defconfig
        cat .config
        
    - name: 加载files和.config
      run: |        
        [ -e files ] && mv files openwrt/files
        #[ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        
    - name: 下载依赖
      working-directory: ./openwrt
      run: |
        make defconfig
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 编译固件
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) || make -j1 || make -j1 V=s
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 整理文件
      id: organize
      run: |
        cd openwrt/bin/targets/*/*
        # 整理固件包时候,删除您不想要的固件或者文件,让它不需要上传到Actions空间
        rm -rf *Linux-x86_64.tar.xz
        rm -rf *rootfs.tar.gz
        rm -rf packages
        rm -rf feeds.buildinfo
        rm -rf version.buildinfo
        rm -rf *kernel.bin
        rm -rf profiles.json
        rm -rf *rootfs.img
        rm -rf *.manifest
        rm -rf sha256sums
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        
    - name: 上传固件
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_KIDDIN9 }}
